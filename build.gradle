buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-staging-local" }
        maven { url "http://repo.spring.io/plugins-release" }
    }
    dependencies {
    }
}
apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

def teamCityLabel = getTeamCityBuildLabel(project)
def teamCityId = getTeamCityBuildId(project)

war {
    doFirst {

        manifest {
            attributes("TeamCity-Build-Label": teamCityLabel)
            attributes("TeamCity-Build-Id": teamCityId)
            attributes("build-by": System.getProperty("user.name"))
            attributes("build-date": new Date())
        }

        eachFile {
            if (it.name == 'index.jsp') {
                it.filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: ['buildLabel': teamCityLabel, 'buildId': teamCityId])
            }
        }
//       filter {
////           it.replace('${buildLabel}', teamCityLabel).replace('${buildId}', teamCityId)
//       }
       //filter(ReplaceTokens, tokens: ['buildLabel': teamCityLabel])
       //filter(ReplaceTokens, tokens: ['buildId': teamCityId])
    }

    baseName = 'playground-admin'
}

repositories {
    maven { url "http://repo.spring.io/libs-staging-local" }
    maven { url "http://repo.spring.io/libs-release" }
}

dependencies {

    compile('javax.servlet:javax.servlet-api:3.0.1')
    compile('javax.servlet.jsp:jsp-api:2.2@jar')

    compile('org.springframework:spring-webmvc:4.0.3.RELEASE')
    compile('org.springframework.data:spring-data-jpa:1.6.2.RELEASE')
    compile("org.springframework.security.oauth:spring-security-oauth2:2.0.2.RELEASE")
    compile('org.springframework:spring-context-support:4.0.6.RELEASE')

    compile('com.mchange:c3p0:0.9.2.1')
    compile('javax.mail:mail:1.4.7')

    compile('org.hibernate:hibernate-envers:4.3.1.Final')

    compile('net.sourceforge.jtds:jtds:1.3.1')

    compile('commons-fileupload:commons-fileupload:1.3.1')

    compile('org.quartz-scheduler:quartz:2.2.1')

    compile('net.java.dev.inflector:inflector:0.7.0')
    compile('com.google.guava:guava:16.0.1')
    compile('com.google.code.findbugs:jsr305:3.0.0')
    compile('org.thymeleaf:thymeleaf:2.1.3.RELEASE')
    compile('org.thymeleaf:thymeleaf-spring4:2.1.3.RELEASE')
    compile('org.apache.commons:commons-lang3:3.3.2')

    compile('ch.qos.logback:logback-classic:1.1.2')

    compile('org.slf4j:jcl-over-slf4j:1.7.7')
    compile('net.sf.opencsv:opencsv:2.3')

    compile('org.elasticsearch:elasticsearch:1.3.2');
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

def getTeamCityBuildLabel(def project) {
    return project.hasProperty('teamCityBuildLabel') ? teamCityBuildLabel : 'NoTcBuild'
}

def getTeamCityBuildId(def project) {
    return project.hasProperty('teamCityBuildId') ? teamCityBuildId : 'NoTcBuildId'
}



